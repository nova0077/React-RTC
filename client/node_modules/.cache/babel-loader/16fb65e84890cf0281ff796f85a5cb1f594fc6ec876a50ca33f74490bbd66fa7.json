{"ast":null,"code":"var _jsxFileName = \"/Users/praveen/Desktop/code/Projects/ReactRTC/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('https://localhost:5005');\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [stream, setStream] = useState();\n  const [me, setMe] = useState('');\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => {\n      console.log('socket se me id aayi: ', id);\n      setMe(id);\n    });\n    socket.on(\"callUser\", ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isRecievingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"tvJivSLoJ4YCfLyO6+/PGtv9cAE=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","children","_s","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","console","log","from","callerName","signal","isRecievingCall","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/praveen/Desktop/code/Projects/ReactRTC/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from 'react';\nimport {io} from 'socket.io-client';\nimport Peer from 'simple-peer'\n\nconst SocketContext = createContext();\n\nconst socket = io('https://localhost:5005')\n\n\nconst ContextProvider = ({children}) => {\n  const [stream, setStream] = useState();\n  const [me, setMe] = useState('');\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName]=useState('')\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({video:true, audio:true})\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      })\n\n      socket.on('me', (id) => {\n        console.log('socket se me id aayi: ',id);\n        setMe(id)\n      });\n\n      socket.on(\"callUser\", ({from, name: callerName, signal}) => {\n        setCall({isRecievingCall: true, from, name:callerName, signal})\n      })\n  },[]);\n\n  const answerCall = () => {\n    setCallAccepted(true)\n\n    const peer = new Peer({initiator: false, trickle:false, stream})\n\n    peer.on('signal', (data) => {\n      socket.emit(\"answerCall\", {signal:data, to:call.from});\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    })\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  }\n\n  const callUser = (id) => {\n    const peer = new Peer({initiator: true, trickle:false, stream});\n\n    peer.on('signal', (data) => {\n      socket.emit(\"callUser\", {userToCall: id, signalData: data, from: me, name});\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on('callAccepted', (signal)=>{\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  }\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  }\n\n  return (\n    <SocketContext.Provider value={{call, callAccepted, myVideo, userVideo, stream, name, setName, callEnded, me, callUser, leaveCall, answerCall}}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport {ContextProvider, SocketContext};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}